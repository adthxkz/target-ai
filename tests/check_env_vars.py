#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ production
"""

import os
import requests

def check_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    required_vars = {
        "TELEGRAM_BOT_TOKEN": "–¢–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –æ—Ç @BotFather",
        "OPENAI_API_KEY": "API –∫–ª—é—á OpenAI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–µ–¥–∏–∞",
        "FACEBOOK_APP_ID": "ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Facebook",
        "FACEBOOK_APP_SECRET": "–°–µ–∫—Ä–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Facebook", 
        "RENDER": "–§–ª–∞–≥ production —Å—Ä–µ–¥—ã"
    }
    
    optional_vars = {
        "FACEBOOK_ACCESS_TOKEN": "Access —Ç–æ–∫–µ–Ω Facebook",
        "FACEBOOK_AD_ACCOUNT_ID": "ID —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞",
        "DATABASE_URL": "URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "MOCK_MODE": "–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    }
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    print("=" * 50)
    
    missing_required = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    print("\nüìã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    for var, description in required_vars.items():
        value = os.getenv(var)
        if value:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            if len(value) > 10:
                masked_value = f"{value[:4]}...{value[-4:]}"
            else:
                masked_value = "***"
            print(f"‚úÖ {var}: {masked_value}")
        else:
            print(f"‚ùå {var}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê - {description}")
            missing_required.append(var)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    print("\nüìã –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    for var, description in optional_vars.items():
        value = os.getenv(var)
        if value:
            if len(value) > 10:
                masked_value = f"{value[:4]}...{value[-4:]}"
            else:
                masked_value = "***"
            print(f"‚úÖ {var}: {masked_value}")
        else:
            print(f"‚ö†Ô∏è  {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ - {description}")
    
    print("\n" + "=" * 50)
    
    if missing_required:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ù–û: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç {len(missing_required)} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö!")
        print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ Render.com:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∞—à–±–æ—Ä–¥ Render.com")
        print("2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–µ—Ä–≤–∏—Å target-ai")
        print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'Environment'")
        print("4. –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
        print()
        
        for var in missing_required:
            print(f"   {var} = [–≤–∞—à–µ_–∑–Ω–∞—á–µ–Ω–∏–µ]")
        
        print("\n5. –ù–∞–∂–º–∏—Ç–µ 'Save Changes' –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞")
        print("\nüí° –ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏–∑ .env —Ñ–∞–π–ª–∞")
        
        return False
    else:
        print("\n‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        return True

def test_bot_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞"""
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    
    if not bot_token:
        print("\n‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    print(f"\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...")
    
    try:
        response = requests.get(
            f"https://api.telegram.org/bot{bot_token}/getMe",
            timeout=10
        )
        
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info.get("ok"):
                bot_data = bot_info["result"]
                print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_data['username']} ({bot_data['first_name']})")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {bot_info}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def check_server_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        response = requests.get(
            "https://target-ai-prlm.onrender.com/health",
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
            return True
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")
        return False

if __name__ == "__main__":
    print("üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Target AI")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = check_environment_variables()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_ok = test_bot_token()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    server_ok = check_server_health()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"   –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {'‚úÖ' if env_ok else '‚ùå'}")
    print(f"   Telegram –±–æ—Ç —Ç–æ–∫–µ–Ω: {'‚úÖ' if bot_ok else '‚ùå'}")
    print(f"   –°–µ—Ä–≤–µ—Ä: {'‚úÖ' if server_ok else '‚ùå'}")
    
    if env_ok and bot_ok and server_ok:
        print("\nüéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("\nüì± –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É:")
        bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
        if bot_token:
            response = requests.get(f"https://api.telegram.org/bot{bot_token}/getMe")
            if response.status_code == 200:
                bot_info = response.json()["result"]
                print(f"   https://t.me/{bot_info['username']}")
    else:
        print("\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render.com")

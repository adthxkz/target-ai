import asyncio
import os
from dotenv import load_dotenv
from telegram_bot_v2 import start, button_callback, handle_media, BOT_TOKEN
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters

async def test_bot_locally():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –ª–æ–∫–∞–ª—å–Ω–æ"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...")
    
    load_dotenv()
    
    if not BOT_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {BOT_TOKEN[:10]}...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = Application.builder().token(BOT_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(button_callback))
        app.add_handler(MessageHandler(filters.PHOTO | filters.VIDEO, handle_media))
        
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await app.initialize()
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await app.bot.get_me()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –ò–º—è –±–æ—Ç–∞: {bot_info.first_name}")
        print(f"   Username: @{bot_info.username}")
        print(f"   ID: {bot_info.id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        from telegram_bot_v2 import API_BASE_URL
        print(f"üì° API URL: {API_BASE_URL}")
        
        import aiohttp
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(f"{API_BASE_URL}/health", timeout=5) as response:
                    if response.status == 200:
                        print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
                    else:
                        print(f"‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status}")
        except Exception as e:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        await app.shutdown()
        print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_bot_locally())

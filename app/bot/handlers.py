from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime
import os

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        [
            InlineKeyboardButton("üìä –ú–æ–∏ –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="campaigns"),
            InlineKeyboardButton("üí∞ –ë—é–¥–∂–µ—Ç", callback_data="budget")
        ],
        [
            InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
            InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
        ],
        [
            InlineKeyboardButton("üîÑ –ü–æ–¥–∫–ª—é—á–∏—Ç—å Facebook", callback_data="connect_fb")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏ Facebook.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

async def campaigns_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ú–æ–∏ –∫–∞–º–ø–∞–Ω–∏–∏"""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="campaigns_active"),
            InlineKeyboardButton("‚è∏ –ù–∞ –ø–∞—É–∑–µ", callback_data="campaigns_paused")
        ],
        [
            InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é", callback_data="campaign_create")
        ],
        [
            InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üìä *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏—è–º–∏*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def show_active_campaigns(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π"""
    query = update.callback_query
    await query.answer()
    
    # –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    campaigns = [
        {"name": "Test Campaign 1", "status": "ACTIVE", "budget": "1000 USD"},
        {"name": "Test Campaign 2", "status": "ACTIVE", "budget": "500 USD"}
    ]
    
    text = "üìà *–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏:*\n\n"
    for i, camp in enumerate(campaigns, 1):
        text += f"{i}. {camp['name']}\n"
        text += f"   –°—Ç–∞—Ç—É—Å: {camp['status']}\n"
        text += f"   –ë—é–¥–∂–µ—Ç: {camp['budget']}\n\n"
    
    keyboard = [
        [
            InlineKeyboardButton("‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data=f"pause_{i}")
            for i in range(len(campaigns))
        ],
        [
            InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥ –∫ –∫–∞–º–ø–∞–Ω–∏—è–º", callback_data="campaigns")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def budget_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ë—é–¥–∂–µ—Ç"""
    query = update.callback_query
    await query.answer()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –±—é–¥–∂–µ—Ç–µ
    total_budget = 1500
    spent_today = 450
    remaining = total_budget - spent_today
    
    keyboard = [
        [
            InlineKeyboardButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç", callback_data="change_budget")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤", callback_data="budget_stats")
        ],
        [
            InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        f"üí∞ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º*\n\n"
        f"–î–Ω–µ–≤–Ω–æ–π –±—é–¥–∂–µ—Ç: ${total_budget}\n"
        f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: ${spent_today}\n"
        f"–û—Å—Ç–∞–ª–æ—Å—å: ${remaining}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def stats_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [
            InlineKeyboardButton("üìÖ –ó–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="stats_today"),
            InlineKeyboardButton("üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="stats_week")
        ],
        [
            InlineKeyboardButton("üìÖ –ó–∞ –º–µ—Å—è—Ü", callback_data="stats_month"),
            InlineKeyboardButton("üìä –°–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç", callback_data="stats_summary")
        ],
        [
            InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def back_to_main(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [
            InlineKeyboardButton("üìä –ú–æ–∏ –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="campaigns"),
            InlineKeyboardButton("üí∞ –ë—é–¥–∂–µ—Ç", callback_data="budget")
        ],
        [
            InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
            InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
        ],
        [
            InlineKeyboardButton("üîÑ –ü–æ–¥–∫–ª—é—á–∏—Ç—å Facebook", callback_data="connect_fb")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

async def settings_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [
            InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings_notifications"),
            InlineKeyboardButton("‚öôÔ∏è –û–±—â–∏–µ", callback_data="settings_general")
        ],
        [
            InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def connect_fb_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü–æ–¥–∫–ª—é—á–∏—Ç—å Facebook"""
    query = update.callback_query
    await query.answer()
    
    backend_url = os.getenv("BACKEND_URL", "http://localhost:8000")
    auth_url = f"{backend_url}/auth/facebook"
    
    keyboard = [
        [
            InlineKeyboardButton("üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", url=auth_url)
        ],
        [
            InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        "üîÑ *–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Facebook*\n\n"
        "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Facebook –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n"
        "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Facebook.",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )
